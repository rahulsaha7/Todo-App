{"version":3,"sources":["components/Header.js","components/BannerItems.js","components/DesktopBanner.js","components/AddTodos.js","components/AddTodoButton.js","components/Dashboard.js","components/Sidebar.js","components/TodoItem.js","components/Categories/Personal.js","components/Categories/Bussiness.js","components/Analytics.js","components/BannerView.js","components/MobileView.js","components/Structure.js","App.js","reportWebVitals.js","index.js"],"names":["Header","SearchData","setSearchData","SearchTodos","defaultTodoNo","updated","useState","view","setview","window","screen","width","windowWidth","setWindowWidth","Notification","setNotification","changeWidth","sidebar","document","querySelector","style","mainContent","display","marginLeft","useEffect","addEventListener","removeEventListener","className","title","onClick","id","role","color","class","href","BannerItems","Message","Date","category","deleteTodo","UpdateTodo","EditForm","setEditForm","EditFormData","setEditFormData","React","action","method","onSubmit","event","type","hidden","value","onChange","target","DesktopBanner","colClass","not","itemList","MessageList","Dates","ids","map","BannerItemsList","index","Msgs","TodayTask","AddTodos","closeTodoOption","updateDesktopHeadings","desktopHeadings","setTodayTask","TodoTitle","TodoFormData","setTodoFormData","e","alldata","preventDefault","msgno","newData","msgNo","msgs","TodoMsg","dates","newids","concat","itemlist","newmsgs","todomsg","newdates","tododates","Category","updateFormData","placeholder","name","required","checked","disabled","defaultValue","AddTodoButton","setnewdesktopHeadings","AddTodo","setAddTodo","Dashboard","setdesktopHeadings","DataChangeSuccess","setDataChangeSuccess","alert","headingList","Sidebar","Width","to","dropDown","TodoItem","Checked","setChecked","Personal","Banners","TodoItems","Bussiness","Analytics","BannerView","borderClass","MobileView","setBanners","BannerList","Structure","setWidth","localStorage","getItem","JSON","parse","default","prevoius","dataCount","TodoCategory","TodoIndex","findIndex","elements","deleteIds","deleteDates","NewData","filter","TodoDeleteIndex","ChangeWidth","oldMessage","oldMessageIndex","NewArray","data1","data2","setItem","stringify","console","log","exact","path","render","props","component","App","Myname","setMyname","showfun","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.42e183b2.chunk.js","sourcesContent":["import React,{useState, useEffect} from \"react\";\n\n\nimport { FcMenu } from \"react-icons/fc\";\n// import { FaSistrix } from \"react-icons/fa\";\nimport { FaBell } from \"react-icons/fa\";\nimport { FaThemeisle } from \"react-icons/fa\";\n\nimport {\n    Link\n} from \"react-router-dom\";\n\n\nexport const Header = ({SearchData,setSearchData,SearchTodos,defaultTodoNo,updated}) => {\n\nconst [view, setview] = useState(false);\nconst [windowWidth, setWindowWidth] = useState(window.screen.width);\n// const [ShowSearch, setShowSearch] = useState(true)\nconst [Notification, setNotification] = useState(\"none\")\n\n\n\n\nconst changeWidth = () => {\n    setWindowWidth(window.screen.width);\n    \n    let sidebar = document.querySelector(\".sidebar\").style;\n    let mainContent =  document.querySelector(\".main\").style;\n\n    windowWidth < 576 ? sidebar.display = \"none\" : sidebar.display = \"block\";\n    windowWidth < 576 ? mainContent.marginLeft = \"10px\" : mainContent.marginLeft = \"65px\";\n    windowWidth < 576 ? mainContent.width = \"calc(100vw - 10px )\" : mainContent.width = \"calc(100vw - 65px )\";\n\n\n}\n\n\nuseEffect(() => {\n    window.addEventListener(\"resize\",changeWidth);\n    return () => {\n        window.removeEventListener(\"resize\",changeWidth);\n    }\n\n})\n\nconst showSidebar = () =>{\n\n\n    let sidebar = document.querySelector(\".sidebar\").style;\n    let mainContent =  document.querySelector(\".main\").style;\n\n    view ? sidebar.display = \"none\" : sidebar.display = \"block\";\n    view ? mainContent.marginLeft= \"10px\" : mainContent.marginLeft = \"65px\";\n    view ? mainContent.width = \"calc(100vw - 10px )\" : mainContent.width = \"calc(100vw - 65px )\";\n    view ? setview(false) : setview(true);\n\n    \n}\n\n\n\n\n\n\n    return (\n        \n        <div>\n                <section className=\"navbar d-flex justify-space-between align-items-center\" >\n                    <button data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Menu Button\" className=\"menuButton\" onClick ={showSidebar}><FcMenu /></button>\n                    <p className=\"theme mb-0 ps-1\"><FaThemeisle /></p>\n                    <div className=\"search-notify d-flex flex-row  px-3\">\n                        {/* <form action=\"\" method=\"post\" className=\"px-2\" onSubmit = {(event)=>{SearchTodos(event)}}>\n\n\n                    <input\n              type=\"text\"\n              className=\"form-control\"\n              aria-label=\"Text input \"\n              placeholder = \"Search\"\n              name=\"SearchTodo\"\n              hidden = {ShowSearch}\n              required={!ShowSearch}\n              value = {SearchData}\n              \n              onChange={(event)=>{setSearchData(event.target.value)}}\n\n            />\n                        </form> */}\n                        {/* <button className=\"me-2\" onClick = {()=>{ShowSearch ? setShowSearch(false) : setShowSearch(true)}} > <FaSistrix/> </button> */}\n                <li>        \n                <Link className=\"nav-link dropdown-toggle ps-0\" id=\"navbarDropdown\" role=\"button\"   aria-expanded=\"false\">\n          <button data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Notification Panel\" style={{color:\"white\"}} onClick = {()=>{Notification === \"none\" ? setNotification(\"block\") : setNotification(\"none\")}}><FaBell /></button>\n          </Link>\n          <ul class=\" bg-white p-0\" aria-labelledby=\"navbarDropdown\" style={{display:Notification}}>\n            <p class=\"NotificationShow p-3\"  href=\"#\">{defaultTodoNo > updated ? \"Todo added or deleted\" : \"No New Todo added or deleted\" }</p>\n            \n          </ul>\n          </li>\n      \n                    </div>\n                </section>\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport { RiDeleteBin3Line } from \"react-icons/ri\";\nimport { RiEdit2Line } from \"react-icons/ri\";\n\nexport const BannerItems = ({Message,Date,category,deleteTodo,UpdateTodo}) => {\n\n  const  [EditForm, setEditForm] = useState(false)\n  const [EditFormData, setEditFormData] = useState(\n    {\n      Message : Message\n    }\n  )\n\n\n  const HideInputField = () =>{\n    setEditForm(false);\n  }\n\n  React.useEffect(() => {\n      HideInputField();\n  }, [Message])\n  \n  return (\n    <div className=\"col-12 mt-4\">\n      <section className=\"heading-items px-2 py-2\">\n        <div className=\"d-flex justify-content-between\">\n          <button data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Delete\" className=\"delete\" onClick={ ()=>{deleteTodo(Message,category)}}>\n            <RiDeleteBin3Line />\n          </button>\n\n          <button onClick = {()=>{\n            EditForm ? setEditForm(false) : setEditForm (true);\n          }} data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Edit\" className=\"edit\">\n            <RiEdit2Line />\n          </button>\n\n\n\n          \n        </div>\n        <p className=\"mt-2\" style = {{display: EditForm ? \"none\" : \"block\"}}>\n        {\n          Message\n           \n        }\n        </p>\n        <section>\n        <form className=\"w-100 border-radius mt-2\" action=\"\" method=\"post\" onSubmit = {(event)=>{UpdateTodo(event,EditFormData.Message,category,Message)}}>\n\n          <input className=\"w-100 overflow-scroll edit-from\"  type=\"text\" hidden ={!EditForm}  value={EditFormData.Message} onChange={(event)=>{setEditFormData({...EditFormData,Message:event.target.value})}}   />\n\n        </form>\n          </section>\n        <div className=\"d-flex justify-content-between mt-2 py-2\">\n          <section className=\"time px-2 py-1\">{category}\n            \n          </section>\n          \n          <section className=\"profiles\">{Date}</section>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React from 'react'\nimport { BannerItems } from './BannerItems.js'\n\nexport const DesktopBanner = ({colClass,category,not,itemList,MessageList,Dates,deleteTodo,UpdateTodo}) => {\n    const {ids} = itemList;\n    return (\n        <div className={colClass}>\n        <section className=\"heading-items px-2 pt-3 d-flex justify-content-between\">\n            <h3 className=\"todo text-break\">{category}</h3>\n            <p className=\"qunatity text-center pt-2\">{not}</p>\n        </section>\n\n\n\n        <div className=\"col-12 data d-flex flex-row\">\n\n\n<div className=\"row flex-coloumn\">\n\n    {\n        ids.map((BannerItemsList,index)=>{\n            return  <BannerItems key={index} Message={MessageList.Msgs[index]} Date = {Dates.TodayTask[index]} category={category} deleteTodo = {deleteTodo} UpdateTodo={UpdateTodo} />\n        })\n    }\n\n \n\n\n\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n\n\n\n\n\n\n    </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nexport const AddTodos = ({ closeTodoOption,updateDesktopHeadings,desktopHeadings }) => {\n  const [TodayTask,setTodayTask] = useState(false)\n\n\n\n\n  const [TodoFormData, setTodoFormData] = useState({\n      TodoTitle:\"\",\n      // TodayTask: new Date().getUTCFullYear()+ \"/\" + new Date().getUTCMonth()+ \"/\" + new Date().getUTCDate(),\n      TodayTask:\"\",\n      category:\"\",\n\n  })\n\n  // const [alldata, setalldata] = useState(desktopHeadings[0]);\n\n\n \n\n  const updateFormData = (e) =>{\n\n  \n    e.preventDefault();\n    \n    let alldata;\n    let newData=[];\n    let id ;\n    let msgno ;\n\n\n    switch (TodoFormData.category) {\n      case \"personal\":\n        alldata=desktopHeadings[0];\n        msgno = desktopHeadings[0].msgNo\n        id=0;\n        break;\n        case \"bussiness\":\n          alldata=desktopHeadings[1];\n          msgno = desktopHeadings[1].msgNo\n          id=1;\n          break;\n          case \"Today's Task\" :\n          alldata=desktopHeadings[2];\n          msgno = desktopHeadings[2].msgNo\n          id=2;\n          break;\n          default:\n            break;\n    }\n\n\n   \n    \n    let ids = alldata.itemList.ids;\n    let msgs = alldata.TodoMsg.Msgs;\n    let dates = alldata.Dates.TodayTask;\n    \n    \n     msgno = msgno+1;\n     newData = ({...alldata,msgNo:msgno});\n\n    // console.log(alldata);\n     let newids = ['ids'+msgno];\n\n     ids = ids.concat(newids);\n     let itemlist = {...newData.itemList,ids:ids}\n\n    let newmsgs = [TodoFormData.TodoTitle];\n    msgs = msgs.concat(newmsgs);\n    let todomsg = {...newData.TodoMsg,Msgs:msgs}\n\n    let newdates = [TodoFormData.TodayTask];\n    dates = dates.concat(newdates);\n    let tododates = {...newData.Dates,TodayTask:dates}\n\n     \n    newData = ({...newData,id:id});\n     \n    newData = ({...newData,Category:TodoFormData.category});\n    \n    newData = ({...newData,itemList:itemlist});\n    newData = ({...newData,TodoMsg:todomsg});\n    newData = ({...newData,Dates:tododates})\n\n    switch (TodoFormData.category) {\n      case \"personal\":\n        desktopHeadings[0]=newData;\n        break;\n        case \"bussiness\":\n          desktopHeadings[1]=newData;\n          break;\n          case \"Today's Task\" :\n            desktopHeadings[2]=newData;\n            break;\n          default:\n            break;\n    }\n\n   \n    updateDesktopHeadings(desktopHeadings);\n  \n\n      \n  }\n  \n  return (\n    <>\n      <section className=\"col-12\">\n        <button\n          className=\"CloseTodo rounded-circle position-fixed\"\n          onClick={closeTodoOption}\n        >\n          <i>\n            <AiOutlineClose />\n          </i>\n        </button>\n        <form className=\"h-100\"  method=\"post\"  onSubmit = {(e)=>{updateFormData(e)}}  >\n         \n        <section className=\"input-holders d-flex align-items-center justify-content-center h-100 flex-column\">\n          <div className=\"TodoMsg p-3\" >\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              aria-label=\"Text input \"\n              placeholder = \"Enter Todo Title\"\n              name=\"TodoTitle\"\n              required\n              value={TodoFormData.TodoTitle}\n              onChange={(event)=>{setTodoFormData({...TodoFormData,TodoTitle:event.target.value})}}\n              data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Add Title Of Todo\"\n            />\n          </div>\n          <div class=\"input-group  mb-3 \" style={{width:\"auto\"}}>\n            <div class=\"input-group-text\">\n              <input\n                className=\"form-check-input TodayTaskCheckbox mt-0 rounded-circle\"\n                type=\"checkbox\"\n                value=\"\"\n                aria-label=\"Checkbox for following text input\"\n                onChange = { (e) => {setTodayTask(e.target.checked)}}\n                id=\"TodayTaskCheckbox\"\n                data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Select This Checkbox to Add it as your todays task\"\n              />\n            </div>\n            <input\n              type=\"date\"\n              \n              \n\n              className=\"form-control\"\n              aria-label=\"Text input with checkbox\"\n              placeholder = \"Today's Task\"\n              name=\"TodayTask\"\n              disabled = {!TodayTask}\n              required = {TodayTask}\n              value={TodoFormData.TodayTask}\n              onChange={(event)=>{setTodoFormData({...TodoFormData,TodayTask:event.target.value})}}\n              data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Add Todays date as it is your Today's Task\"\n            />\n          </div>\n          <div className=\"Category\">\n           \n              <select  className=\"form-control\"  name=\"Category\"  id=\"\" hidden={TodayTask} \n              required=\" \" onChange={(event)=>{setTodoFormData({...TodoFormData,category:event.target.value})}}>\n                <option defaultValue=\"Select Category\">SELECT CATEGORY</option>\n                <option value=\"personal\">personal</option>\n                <option value=\"bussiness\">bussiness</option>\n                \n              </select>\n              <select data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Select Category of the Task\"  className=\"form-control\"  name=\"Category\"  id=\"\" hidden={!TodayTask}\n              required={TodayTask}  onChange={(event)=>{setTodoFormData({...TodoFormData,category:event.target.value})}}>\n                <option defaultValue=\"Select Category\">SELECT CATEGORY</option>\n                \n                <option value=\"Today's Task\">Today's Task</option>\n              </select>\n          </div>\n          <button className=\"mt-2 btn btn-outline-primary\" type=\"submit\">submit</button>\n        </section>\n\n        \n\n        </form>\n      </section>\n    </>\n  );\n};\n","import React from 'react'\nimport {AiOutlinePlus} from 'react-icons/ai';\nimport { AddTodos } from './AddTodos.js';\n\nexport const AddTodoButton = ({ setnewdesktopHeadings,desktopHeadings }) => {\n    const [AddTodo, setAddTodo] = React.useState(\"none\");\n    \n   \n    \n\n\n    const closeTodoOption = () => {\n    AddTodo===\"block\" ? setAddTodo(\"none\") : setAddTodo(\"block\");\n}\n  \n\nconst updateDesktopHeadings = (TodoFormData) => {\n    \n    setnewdesktopHeadings(TodoFormData);\n    AddTodo===\"none\" ? setAddTodo(\"block\") : setAddTodo(\"none\");\n\n}\n\n\n    return (\n    <>\n        <button className=\"AddTodoButton rounded-circle position-fixed\" onClick = {()=>{AddTodo===\"none\" ? setAddTodo(\"block\") : setAddTodo(\"none\")}}>\n        <i>\n            <AiOutlinePlus />\n        </i>\n</button>\n<div className=\"container-fluid addTodo\" style={{display:AddTodo}}>\n        <div className=\"row h-100\">\n            <AddTodos closeTodoOption= {closeTodoOption} updateDesktopHeadings={updateDesktopHeadings} desktopHeadings = {desktopHeadings}  />\n        </div>\n</div> \n</>\n    )\n}\n","import React from \"react\";\n\nimport { DesktopBanner } from \"./DesktopBanner.js\";\nimport { AddTodoButton } from \"./AddTodoButton.js\";\n\n\nexport const Dashboard = ({\n  desktopHeadings,\n  setdesktopHeadings,\n  DataChangeSuccess,\n  setDataChangeSuccess,\n  deleteTodo,\n  UpdateTodo\n}) => {\n  const setnewDesktopHeadings = (TodoFormData) => {\n    setdesktopHeadings(TodoFormData);\n    alert(\"Todo Added\");\n    DataChangeSuccess\n      ? setDataChangeSuccess(false)\n      : setDataChangeSuccess(true);\n  };\n\n\n  return (\n    <>\n      <div className=\"container-fluid p-0 m-0 mt-3\">\n        <AddTodoButton\n          setnewdesktopHeadings={setnewDesktopHeadings}\n          desktopHeadings={desktopHeadings}\n        />\n\n        <div className=\"row\">\n          <div className=\"col-12 headings\">\n            <section className=\"row\">\n              {desktopHeadings.map((headingList) => {\n                return (\n                  <DesktopBanner\n                    key={headingList.id}\n                    colClass={headingList.colClass}\n                    category={headingList.Category}\n                    not={headingList.msgNo}\n                    itemList={headingList.itemList}\n                    MessageList={headingList.TodoMsg}\n                    Dates={headingList.Dates}\n                    deleteTodo={deleteTodo}\n                    UpdateTodo={UpdateTodo}\n                  />\n                );\n              })}\n            </section>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","\nimport {\n    Link\n} from \"react-router-dom\";\n\n\nimport { IoMdAnalytics } from 'react-icons/io';\nimport {BiHomeAlt} from 'react-icons/bi';\nimport {MdEventBusy} from 'react-icons/md';\nimport {MdPersonalVideo} from 'react-icons/md';\n\nimport {FcTodoList} from 'react-icons/fc';\nexport const Sidebar = ({Width}) => {\n\n    const showDropdown = () =>{\n            let dropDown = document.querySelector(\".dropdownMenu\").style;\n            let sidebar = document.querySelector(\".sidebar\").style;\n            if(Width < 576)\n                sidebar.display === \"block\" ? dropDown.display === \"block\" ? dropDown.display = \"none\" : dropDown.display=\"block\" : dropDown.display=\"none\"\n    }\n    return (\n      \n            <div className=\"sidebar-content\">\n\n               \n\n                \n\n                <section className=\"menu-list mt-3 d-flex flex-column justify-content-between\">\n\n                    <nav className=\"manu-item-holder\">\n                        <ul className=\"menu-items px-2\">\n\n\n \n                            <li className=\"py-2 mt-1 activate\">\n                                \n                                <Link data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Home\" style={{color:\"white\"}} to=\"/\" className=\"dashboard\"><BiHomeAlt /></Link>\n                                \n                            </li>\n\n\n\n\n                            <li  className=\"nav-item dropdown\">\n          <Link   className=\"nav-link dropdown-toggle ps-0\" id=\"navbarDropdown\" role=\"button\"   aria-expanded=\"false\">\n          <button style={{color:\"white\"}} to=\"/Lead\" className=\"Lead\" data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Show Categories\" onClick = {showDropdown}><FcTodoList /></button>\n          </Link>\n          <ul class=\"dropdownMenu p-0\" aria-labelledby=\"navbarDropdown\">\n            <li><Link data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Personal Category\" style={{color:\"black\"}} class=\"dropdown-item \" to=\"/category/personal\">{<MdPersonalVideo />}</Link></li>\n            <li><Link data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Bussiness Category\" style={{color:\"black\"}} class=\"dropdown-item\" to=\"/category/bussiness\">{<MdEventBusy/>}</Link></li>\n          </ul>\n        </li>\n\n                           \n\n\n\n\n                            <li className=\"py-2  mt-1\">\n                                \n                                <Link data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Analytics Section\" style={{color:\"white\"}} to=\"/Analytics\" className=\"Employee\"><IoMdAnalytics /></Link>\n                                \n                            </li>\n\n\n\n\n\n\n                           \n\n\n\n\n                          \n\n\n\n\n\n\n\n                            \n\n                           \n                        </ul>\n                    </nav>\n\n                    <nav className=\"menu-item-holder\">\n                        \n                        {/* <button><FaSignInAlt /></button> */}\n                        <p style={{color:\"white\"}} className=\"mt-2 h-100\">v1.0.2</p>\n                        \n                    </nav>\n\n                </section>\n            </div>\n     \n    )\n}\n","import React,{useState,useEffect} from 'react'\n\n\nimport {FcEditImage} from 'react-icons/fc'\nimport {FcDeleteRow} from 'react-icons/fc'\n\nexport const TodoItem = ({TodoTitle,Checked,setChecked,category,deleteTodo,UpdateTodo}) => {\n\n\n    const  [EditForm, setEditForm] = useState(false)\n  const [EditFormData, setEditFormData] = useState(\n    {\n      Message : TodoTitle\n    }\n  )\n\n  const HideInputField = () =>{\n    setEditForm(false);\n  }\n\n  useEffect(() => {\n      HideInputField();\n  }, [TodoTitle])\n\n\n    return (\n        <section className=\"col-12 mt-2\">\n        <div className=\"ps-3 py-3 tasks d-flex align-items-center\">\n\n        \n            \n\n            <div className=\"taskTitle d-flex align-items-center ms-3\">\n                <p  style = {{display: EditForm ? \"none\" : \"block\"}} className=\"text-white mb-0 text-break\">{TodoTitle}</p>\n                <section>\n        <form className=\"w-100 border-radius mt-2\" action=\"\" method=\"post\" onSubmit = {(event)=>{UpdateTodo(event,EditFormData.Message,category,TodoTitle)}}>\n\n          <input className=\"w-100 overflow-scroll edit-from\"  type=\"text\" hidden ={!EditForm}  value={EditFormData.Message} onChange={(event)=>{setEditFormData({...EditFormData,Message:event.target.value})}}   />\n\n        </form>\n          </section>\n            </div>\n\n\n            <div className=\"update-delete-button w-50 d-flex justify-content-end\">\n                                        <button data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Edit\" className=\"edit\" onClick = {()=>{\n            EditForm ? setEditForm(false) : setEditForm (true);\n          }} >\n                                            <FcEditImage />\n\n\n                                        </button>\n                                            <button data-bs-toggle=\"tooltip\" data-bs-placement=\"right\" title=\"Delete\" className=\"delete\" onClick={()=>{deleteTodo(TodoTitle,category)}} >\n                                                <FcDeleteRow />\n                                            </button>\n                                    </div>\n        \n           \n\n\n        </div>\n</section>  \n    )\n}\n","import React from 'react'\nimport { TodoItem } from '../TodoItem';\n\nexport const Personal = ({Banners,deleteTodo,UpdateTodo }) => {\n    const [Checked, setChecked] = React.useState(false);\n    const {ids} = Banners[0].itemList;\n   \n    return (\n    <>\n        <div className=\"container-fluid ps-3 m-0 mt-3\">\n        <h3 className=\"title text-white\">Hey! What's up</h3>\n        <p className=\"categories-title mt-4\">Categories</p>\n        <section className=\"row mt-2\">\n           \n           <h3 style={{color:\"white\"}}>Personal Category</h3>\n           \n          \n        </section>\n\n        <section className=\"todolistHolder\">\n        <p className=\"categories-title mt-4\">Todos</p>\n        <div className=\"row mt-2 h-100 overflow-scroll\">\n        \n        {\n\n            ids.map ((TodoItems,index) => {\n               return <TodoItem TodoTitle = {Banners[0].TodoMsg.Msgs[index]}  Checked = {Checked} setChecked = {setChecked} key = {index} category={Banners[0].Category}  deleteTodo={deleteTodo}  UpdateTodo={UpdateTodo} />\n            }) \n        }\n            \n        \n        \n\n            \n           \n        </div>\n        </section>\n        \n       \n</div>\n</>\n    )\n}\n","import React from 'react'\nimport { TodoItem } from '../TodoItem';\n\nexport const Bussiness = ({Banners,deleteTodo,UpdateTodo}) => {\n    const [Checked, setChecked] = React.useState(false);\n    const {ids} = Banners[1].itemList;\n\n    return (\n    <>\n        <div className=\"container-fluid ps-3 m-0 mt-3\">\n        <h3 className=\"title text-white\">Hey! What's up</h3>\n\n        <p className=\"categories-title mt-4\">Categories</p>\n        <section className=\"row mt-2\">\n           \n        <h3 style={{color:\"white\"}}>Personal Category</h3>\n           \n          \n        </section>\n\n        <section className=\"todolistHolder\">\n        <p className=\"categories-title mt-4\">Todos</p>\n        <div className=\"row mt-2 h-100 overflow-scroll\">\n        \n        {\n\n            ids.map ((TodoItems,index) => {\n               return <TodoItem TodoTitle = {Banners[1].TodoMsg.Msgs[index]}  Checked = {Checked} setChecked = {setChecked} key = {index} category={Banners[1].Category}  deleteTodo={deleteTodo} UpdateTodo={UpdateTodo}  />\n            }) \n        }\n            \n        \n        \n\n            \n           \n        </div>\n        </section>\n        \n       \n</div>\n</>\n    )\n}\n","import React from 'react'\n\nexport const Analytics = () => {\n    return (\n        <div>\n            <h1>This Section will be enabled soon </h1>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const BannerView = ({not,colClass,borderClass,category}) => {\n    return (\n        <div className={colClass}>\n                             <section className=\"categoryList p-1\">\n                                <span className=\"numberOfTasks text-white ps-2 pt-2 text-break\">{not}</span>\n                                <h5 className=\"categoryTitle text-white p-2 mt-2 text-break\">{category}</h5>\n                                <div className=\"w-100 px-2\">\n                                <span className={borderClass}></span>\n                                </div>\n                            </section>   \n                        </div>\n    )\n}\n","import React from 'react'\n\n\nimport { TodoItem } from './TodoItem.js'\nimport {BannerView} from './BannerView.js'\nimport { AddTodoButton } from './AddTodoButton.js';\n\n\n\n\n\nexport const MobileView = ({setDataChangeSuccess,DataChangeSuccess,Banners,setBanners,deleteTodo,UpdateTodo}) => {\n\n    \n    const [Checked, setChecked] = React.useState(false);\n\n   \n\n        \n        const setnewDesktopHeadings = (TodoFormData) =>{\n            setBanners(TodoFormData);\n            alert(\"Todo Added\");\n            DataChangeSuccess ? setDataChangeSuccess(false) : setDataChangeSuccess(true);\n            \n        }\n\n\n       \n        \n        \n        const {ids} = Banners[2].itemList;\n\n    return (\n        <>\n            <div className=\"container-fluid ps-3 m-0 mt-3\">\n                    <h3 className=\"title text-white\">Hey! What's up</h3>\n\n                    <AddTodoButton  setnewdesktopHeadings = {setnewDesktopHeadings}  desktopHeadings = {Banners}  />\n                    <p className=\"categories-title mt-4\">Categories</p>\n                    <section className=\"row mt-2\">\n                       \n                        {\n                            Banners.map((BannerList ) => {\n                                return <BannerView key = {BannerList.id} not = {BannerList.msgNo} colClass = {BannerList.colClass} borderClass = {BannerList.borderClass} category = {BannerList.Category} Message = {BannerList.TodoMsg} />\n                            })\n                        }\n                       \n                       \n                      \n                    </section>\n\n                    <section className=\"todolistHolder\">\n                    <p className=\"categories-title mt-4\">Today's Tasks</p>\n                    <div className=\"row mt-2 h-100 overflow-scroll\">\n                    \n                    {\n\n                        ids.map ((TodoItems,index) => {\n                           return <TodoItem TodoTitle = {Banners[2].TodoMsg.Msgs[index]}  Checked = {Checked} setChecked = {setChecked} key = {index} category={Banners[2].Category}  deleteTodo={deleteTodo} UpdateTodo={UpdateTodo} />\n                        }) \n                    }\n                        \n                    \n                    \n\n                        \n                       \n                    </div>\n                    </section>\n                    \n                   \n            </div>\n        </>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles/Structure.css\";\nimport { Header } from \"../components/Header.js\";\n\nimport { Dashboard } from \"./Dashboard.js\";\nimport { Sidebar } from \"../components/Sidebar.js\";\nimport {Personal} from './Categories/Personal.js'\nimport {Bussiness} from './Categories/Bussiness.js'\nimport { Analytics } from \"./Analytics.js\";\n\n\n\nimport { MobileView } from \"./MobileView.js\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\n\nconst getDataFromLocalStorage = () =>{\n  let Heading = localStorage.getItem('Headings');\n      if(Heading){\n          return JSON.parse(localStorage.getItem('Headings'));\n      }else{\n          return [\n              {\n      \n                  id:0,\n                  msgNo:0,\n                  Category:\"personal\",\n                  colClass:\"col-3\",\n                  itemList: {\n                  ids:[\n                     \n                  ]\n                  },\n                  TodoMsg:{\n                      Msgs:[\n                       \n                      ] \n                    },\n                    Dates:{\n                      TodayTask:[\n                        \n                      ]\n                    },\n                  borderClass:\"border-span-2\"\n              \n              },\n              {\n                  id:1,\n                  msgNo:0,\n                  Category:\"Bussiness\",\n                  colClass:\"col-3\",\n                  itemList : {\n                      ids:[\n                         \n                      ]\n                  },\n                  TodoMsg:{\n                    Msgs:[\n                      \n                    ] \n                  },\n                  Dates:{\n                      TodayTask:[\n                        \n                      ]\n                    },\n                  borderClass:\"border-span\"\n                  \n              },\n              {\n              \n                  id:2,\n                  msgNo:0,\n                  Category:\"Today's Task\",\n                  colClass:\"col-3\",\n                  itemList: {\n                  ids:[\n                     \n                  ]\n                  },\n                  TodoMsg:{\n                      Msgs:[\n                       \n                      ] \n                    },\n                    Dates:{\n                      TodayTask:[\n                        \n                      ]\n                    },\n                  borderClass:\"border-span-2\"\n              \n              },\n          ]\n      }\n}\n\n\n\n\n\nexport const Structure = () => {\n  const [Width, setWidth] = useState(window.screen.width);\n  const [DataChangeSuccess, setDataChangeSuccess] = useState(false);\n  const [desktopHeadings, setdesktopHeadings] = useState(getDataFromLocalStorage());\n  const [SearchData, setSearchData] = useState(\"\");\n  const [dataCount, setdataCount] = useState([\n    {\n      default:0,\n      prevoius:0\n    },\n  ]);\n\n\n\n\n  const deleteTodo = (Message, TodoCategory) => {\n    let index;\n    switch (TodoCategory) {\n      case \"personal\":\n        index = 0;\n        break;\n\n      case \"Today's Task\":\n        index = 2;\n        break;\n\n      case \"bussiness\":\n        index = 1;\n        break;\n      default:\n        alert(\"something Went Wrong\");\n        break;\n    }\n\n    let TodoIndex = desktopHeadings[index].TodoMsg.Msgs.findIndex(\n      (elements) => elements === Message\n    );\n    let deleteIds = desktopHeadings[index].itemList.ids[TodoIndex];\n    let deleteDates = desktopHeadings[index].Dates.TodayTask[TodoIndex];\n\n    let NewData = {\n      ...desktopHeadings[index],\n      msgNo: desktopHeadings[index].msgNo - 1,\n    };\n    let Msgs = desktopHeadings[index].TodoMsg.Msgs.filter((TodoDeleteIndex) => {\n      return TodoDeleteIndex !== Message;\n    });\n    let ids = desktopHeadings[index].itemList.ids.filter((TodoDeleteIndex) => {\n      return TodoDeleteIndex !== deleteIds;\n    });\n    let TodayTask = desktopHeadings[index].Dates.TodayTask.filter(\n      (TodoDeleteIndex) => {\n        return TodoDeleteIndex !== deleteDates;\n      }\n    );\n    NewData = { ...NewData, TodoMsg: { Msgs } };\n    NewData = { ...NewData, itemList: { ids } };\n    NewData = { ...NewData, Dates: { TodayTask } };\n    desktopHeadings[index] = NewData;\n    setdesktopHeadings(desktopHeadings);\n\n    DataChangeSuccess\n      ? setDataChangeSuccess(false)\n      : setDataChangeSuccess(true);\n  };\n\n   \n\n\n  const SearchTodos = (e) =>{\n    e.preventDefault();\n    console.log(SearchData);\n    console.log(desktopHeadings[2].TodoMsg.Msgs.findIndex(elements => elements=== SearchData) );\n    setSearchData(\"\");\n  }\n  \n  \n\n  const ChangeWidth = () => {\n    setWidth(window.screen.width);\n  };\n\n\n\n\n\n\n  const UpdateTodo = (event,EditFormData,category,oldMessage) =>{\n    event.preventDefault();\n    if(oldMessage === EditFormData ){\n        alert(\"You haven't changed anything \");\n    }\n    else if(EditFormData === \" \" || EditFormData === \"\"){\n        alert(\"To Delete,Click the above delete Button\");\n    }\n    else{\n    let index;\n    let oldMessageIndex;\n    switch (category) {\n      case \"personal\":\n        index = 0;\n        break;\n\n      case \"Today's Task\":\n        index = 2;\n        break;\n\n      case \"bussiness\":\n        index = 1;\n        break;\n      default:\n        alert(\"something Went Wrong\");\n        break;\n    }\n   oldMessageIndex =  desktopHeadings[index].TodoMsg.Msgs.findIndex(elements => elements=== oldMessage) ;\n    let NewArray = desktopHeadings[index];\n    let Msgs = NewArray.TodoMsg.Msgs;\n     Msgs[oldMessageIndex] = EditFormData;\n\n    NewArray = ({...NewArray,TodoMsg: {Msgs}});\n    desktopHeadings[index] = NewArray;\n    setdesktopHeadings(desktopHeadings);\n\n    alert(\"Item Edited\");\n\n    DataChangeSuccess\n      ? setDataChangeSuccess(false)\n      : setDataChangeSuccess(true);\n  }\n}\n\n\n\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", ChangeWidth);\n    return () => {\n      window.removeEventListener(\"resize\", ChangeWidth);\n    };\n  });\n\n  useEffect(() => {\n    let data1 = dataCount[0].default;\n    let data2 = dataCount[0].default;\n    data1=data1+1;\n    data1 = ({...dataCount,default:data1});\n     data1 = ({...data1,prevoius:data2});\n     \n     dataCount[0]=data1;\n     \n    localStorage.setItem('Headings',JSON.stringify(desktopHeadings));\n}, [DataChangeSuccess])\n\n  return (\n    <Router>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12 header\">\n            <Header SearchData={SearchData} setSearchData={setSearchData} SearchTodos = {SearchTodos} defaultTodoNo = {dataCount[0].default} updated = {dataCount[0].prevoius} />\n          </div>\n          <div className=\"col-12 main-content\">\n            <div className=\"row main-content-holder\">\n              <div className=\"col-12 sidebar\">\n                <Sidebar Width={Width} />\n              </div>\n              <div className=\"col-12 main\">\n            <Switch>\n              <Route exact path = \"/\"  render = {props=>(\n\n                  Width > 576 ? <Dashboard  {...props}  setDataChangeSuccess={setDataChangeSuccess} DataChangeSuccess = {DataChangeSuccess} desktopHeadings={desktopHeadings} setdesktopHeadings={setdesktopHeadings}  deleteTodo={deleteTodo} UpdateTodo={UpdateTodo}  /> : <MobileView setDataChangeSuccess={setDataChangeSuccess} DataChangeSuccess={DataChangeSuccess} Banners = {desktopHeadings} setBanners = {setdesktopHeadings} deleteTodo={deleteTodo} UpdateTodo={UpdateTodo}  /> \n\n              )}/>\n               \n\n               <Switch>\n                        <Route exact path=\"/category/personal\" render= {props=>(\n                           \n                            Width > 576 ? <Dashboard  {...props}  setDataChangeSuccess={setDataChangeSuccess} DataChangeSuccess = {DataChangeSuccess} desktopHeadings={desktopHeadings} setdesktopHeadings={setdesktopHeadings}  deleteTodo={deleteTodo} UpdateTodo={UpdateTodo}  /> :  <Personal {...props} Banners={desktopHeadings}   deleteTodo={deleteTodo} UpdateTodo={UpdateTodo}  />\n                        )} />\n                        <Route exact path=\"/category/bussiness\" render= {props=>(\n                            \n                            Width > 576 ? <Dashboard  {...props}  setDataChangeSuccess={setDataChangeSuccess} DataChangeSuccess = {DataChangeSuccess} desktopHeadings={desktopHeadings} setdesktopHeadings={setdesktopHeadings}  deleteTodo={deleteTodo} UpdateTodo={UpdateTodo}  /> :  <Bussiness {...props} Banners={desktopHeadings}  deleteTodo={deleteTodo} UpdateTodo={UpdateTodo}  />\n                            \n                        )} />\n                        <Route exact path= \"/Analytics\" component ={Analytics}  />\n               </Switch>\n              \n            \n            \n\n\n            </Switch>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n};\n","// import logo from './logo.svg';\nimport React, { useState }  from 'react';\nimport './App.css';\n//  import Header from './components/Header.js';\n import {Structure} from './components/Structure.js';\n import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [Myname, setMyname] = useState(1);\n  const ShowName = () =>{\n      Myname === 1 ?  document.querySelector('.sidebardiv').style.display = \"none\" : document.querySelector('.sidebardiv').style.display = \"block\";\n      setMyname(0);\n\n  }\n\n\n\n  return (\n      <Router>\n          <div>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Structure  showfun = {ShowName} />\n                </Route>\n              </Switch>\n          </div>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}