{"version":3,"sources":["components/Header.js","components/BannerItems.js","components/DesktopBanner.js","components/AddTodos.js","components/AddTodoButton.js","components/Dashboard.js","components/Sidebar.js","components/TodoItem.js","components/Categories/Personal.js","components/Categories/Bussiness.js","components/Analytics.js","components/BannerView.js","components/MobileView.js","components/Structure.js","App.js","reportWebVitals.js","index.js"],"names":["Header","SearchData","setSearchData","SearchTodos","defaultTodoNo","updated","useState","view","setview","window","screen","width","windowWidth","setWindowWidth","Notification","setNotification","changeWidth","sidebar","document","querySelector","style","mainContent","display","marginLeft","useEffect","addEventListener","removeEventListener","className","onClick","id","role","class","href","BannerItems","Message","Date","category","deleteTodo","DesktopBanner","colClass","not","itemList","MessageList","Dates","ids","map","BannerItemsList","index","Msgs","TodayTask","AddTodos","closeTodoOption","updateDesktopHeadings","desktopHeadings","setTodayTask","TodoTitle","TodoFormData","setTodoFormData","method","onSubmit","e","alldata","preventDefault","msgno","newData","msgNo","msgs","TodoMsg","dates","newids","concat","itemlist","newmsgs","todomsg","newdates","tododates","Category","updateFormData","type","placeholder","name","required","value","onChange","event","target","checked","disabled","hidden","defaultValue","AddTodoButton","setnewdesktopHeadings","React","AddTodo","setAddTodo","Dashboard","setdesktopHeadings","DataChangeSuccess","setDataChangeSuccess","alert","headingList","Sidebar","Width","to","dropDown","TodoItem","Checked","setChecked","Personal","Banners","TodoItems","Bussiness","Analytics","BannerView","borderClass","MobileView","setBanners","BannerList","Structure","setWidth","localStorage","getItem","JSON","parse","default","prevoius","dataCount","TodoCategory","TodoIndex","findIndex","elements","deleteIds","deleteDates","NewData","filter","TodoDeleteIndex","ChangeWidth","data1","data2","setItem","stringify","console","log","exact","path","render","props","component","App","Myname","setMyname","showfun","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1f6c6eb7.chunk.js","sourcesContent":["import React,{useState, useEffect} from \"react\";\n\n\nimport { FcMenu } from \"react-icons/fc\";\n// import { FaSistrix } from \"react-icons/fa\";\nimport { FaBell } from \"react-icons/fa\";\nimport { FaThemeisle } from \"react-icons/fa\";\n\nimport {\n    Link\n} from \"react-router-dom\";\n\n\nexport const Header = ({SearchData,setSearchData,SearchTodos,defaultTodoNo,updated}) => {\n\nconst [view, setview] = useState(false);\nconst [windowWidth, setWindowWidth] = useState(window.screen.width);\n// const [ShowSearch, setShowSearch] = useState(true)\nconst [Notification, setNotification] = useState(\"none\")\n\n\n\n\nconst changeWidth = () => {\n    setWindowWidth(window.screen.width);\n    \n    let sidebar = document.querySelector(\".sidebar\").style;\n    let mainContent =  document.querySelector(\".main\").style;\n\n    windowWidth < 576 ? sidebar.display = \"none\" : sidebar.display = \"block\";\n    windowWidth < 576 ? mainContent.marginLeft = \"10px\" : mainContent.marginLeft = \"65px\";\n    windowWidth < 576 ? mainContent.width = \"calc(100vw - 10px )\" : mainContent.width = \"calc(100vw - 65px )\";\n\n\n}\n\n\nuseEffect(() => {\n    window.addEventListener(\"resize\",changeWidth);\n    return () => {\n        window.removeEventListener(\"resize\",changeWidth);\n    }\n\n})\n\nconst showSidebar = () =>{\n\n\n    let sidebar = document.querySelector(\".sidebar\").style;\n    let mainContent =  document.querySelector(\".main\").style;\n\n    view ? sidebar.display = \"none\" : sidebar.display = \"block\";\n    view ? mainContent.marginLeft= \"10px\" : mainContent.marginLeft = \"65px\";\n    view ? mainContent.width = \"calc(100vw - 10px )\" : mainContent.width = \"calc(100vw - 65px )\";\n    view ? setview(false) : setview(true);\n\n    \n}\n\n\n\n\n\n\n    return (\n        \n        <div>\n                <section className=\"navbar d-flex justify-space-between align-items-center\" >\n                    <button className=\"menuButton\" onClick ={showSidebar}><FcMenu /></button>\n                    <p className=\"theme mb-0 ps-1\"><FaThemeisle /></p>\n                    <div className=\"search-notify d-flex flex-row  px-3\">\n                        {/* <form action=\"\" method=\"post\" className=\"px-2\" onSubmit = {(event)=>{SearchTodos(event)}}>\n\n\n                    <input\n              type=\"text\"\n              className=\"form-control\"\n              aria-label=\"Text input \"\n              placeholder = \"Search\"\n              name=\"SearchTodo\"\n              hidden = {ShowSearch}\n              required={!ShowSearch}\n              value = {SearchData}\n              \n              onChange={(event)=>{setSearchData(event.target.value)}}\n\n            />\n                        </form> */}\n                        {/* <button className=\"me-2\" onClick = {()=>{ShowSearch ? setShowSearch(false) : setShowSearch(true)}} > <FaSistrix/> </button> */}\n                <li>        \n                <Link className=\"nav-link dropdown-toggle ps-0\" id=\"navbarDropdown\" role=\"button\"   aria-expanded=\"false\">\n          <button onClick = {()=>{Notification === \"none\" ? setNotification(\"block\") : setNotification(\"none\")}}><FaBell /></button>\n          </Link>\n          <ul class=\" bg-white p-0\" aria-labelledby=\"navbarDropdown\" style={{display:Notification}}>\n            <p class=\"\" href=\"#\">{defaultTodoNo > updated ? \"Todo added or deleted\" : \"No New Todo added or deleted\" }</p>\n            \n          </ul>\n          </li>\n      \n                    </div>\n                </section>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { RiDeleteBin3Line } from \"react-icons/ri\";\nimport { RiEdit2Line } from \"react-icons/ri\";\n\nexport const BannerItems = ({Message,Date,category,deleteTodo}) => {\n\n\n\n  \n  return (\n    <div className=\"col-12 mt-4\">\n      <section className=\"heading-items px-2 py-2\">\n        <div className=\"d-flex justify-content-between\">\n          <button className=\"edit\" onClick={ ()=>{deleteTodo(Message,category)}}>\n            <RiDeleteBin3Line />\n          </button>\n\n          <button className=\"delete\">\n            <RiEdit2Line />\n          </button>\n          \n        </div>\n        {\n          Message\n           \n        }\n        <div className=\"d-flex justify-content-between mt-2 py-2\">\n          <section className=\"time px-2 py-1\">{category}</section>\n          <section className=\"profiles\">{Date}</section>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React from 'react'\nimport { BannerItems } from './BannerItems.js'\n\nexport const DesktopBanner = ({colClass,category,not,itemList,MessageList,Dates,deleteTodo}) => {\n    const {ids} = itemList;\n    return (\n        <div className={colClass}>\n        <section className=\"heading-items px-2 pt-3 d-flex justify-content-between\">\n            <h3 className=\"todo text-break\">{category}</h3>\n            <p className=\"qunatity text-center pt-2\">{not}</p>\n        </section>\n\n\n\n        <div className=\"col-12 data d-flex flex-row\">\n\n\n<div className=\"row flex-coloumn\">\n\n    {\n        ids.map((BannerItemsList,index)=>{\n            return  <BannerItems key={index} Message={MessageList.Msgs[index]} Date = {Dates.TodayTask[index]} category={category} deleteTodo = {deleteTodo} />\n        })\n    }\n\n \n\n\n\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n\n\n\n\n\n\n    </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nexport const AddTodos = ({ closeTodoOption,updateDesktopHeadings,desktopHeadings }) => {\n  const [TodayTask,setTodayTask] = useState(false)\n\n\n\n\n  const [TodoFormData, setTodoFormData] = useState({\n      TodoTitle:\"\",\n      // TodayTask: new Date().getUTCFullYear()+ \"/\" + new Date().getUTCMonth()+ \"/\" + new Date().getUTCDate(),\n      TodayTask:\"\",\n      category:\"\",\n\n  })\n\n  // const [alldata, setalldata] = useState(desktopHeadings[0]);\n\n\n \n\n  const updateFormData = (e) =>{\n\n  \n    e.preventDefault();\n    \n    let alldata;\n    let newData=[];\n    let id ;\n    let msgno ;\n\n\n    switch (TodoFormData.category) {\n      case \"personal\":\n        alldata=desktopHeadings[0];\n        msgno = desktopHeadings[0].msgNo\n        id=0;\n        break;\n        case \"bussiness\":\n          alldata=desktopHeadings[1];\n          msgno = desktopHeadings[1].msgNo\n          id=1;\n          break;\n          case \"Today's Task\" :\n          alldata=desktopHeadings[2];\n          msgno = desktopHeadings[2].msgNo\n          id=2;\n          break;\n          default:\n            break;\n    }\n\n\n   \n    \n    let ids = alldata.itemList.ids;\n    let msgs = alldata.TodoMsg.Msgs;\n    let dates = alldata.Dates.TodayTask;\n    \n    \n     msgno = msgno+1;\n     newData = ({...alldata,msgNo:msgno});\n\n    // console.log(alldata);\n     let newids = ['ids'+msgno];\n\n     ids = ids.concat(newids);\n     let itemlist = {...newData.itemList,ids:ids}\n\n    let newmsgs = [TodoFormData.TodoTitle];\n    msgs = msgs.concat(newmsgs);\n    let todomsg = {...newData.TodoMsg,Msgs:msgs}\n\n    let newdates = [TodoFormData.TodayTask];\n    dates = dates.concat(newdates);\n    let tododates = {...newData.Dates,TodayTask:dates}\n\n     \n    newData = ({...newData,id:id});\n     \n    newData = ({...newData,Category:TodoFormData.category});\n    \n    newData = ({...newData,itemList:itemlist});\n    newData = ({...newData,TodoMsg:todomsg});\n    newData = ({...newData,Dates:tododates})\n\n    switch (TodoFormData.category) {\n      case \"personal\":\n        desktopHeadings[0]=newData;\n        break;\n        case \"bussiness\":\n          desktopHeadings[1]=newData;\n          break;\n          case \"Today's Task\" :\n            desktopHeadings[2]=newData;\n            break;\n          default:\n            break;\n    }\n\n   \n    updateDesktopHeadings(desktopHeadings);\n  \n\n      \n  }\n  \n  return (\n    <>\n      <section className=\"col-12\">\n        <button\n          className=\"CloseTodo rounded-circle position-fixed\"\n          onClick={closeTodoOption}\n        >\n          <i>\n            <AiOutlineClose />\n          </i>\n        </button>\n        <form className=\"h-100\"  method=\"post\"  onSubmit = {(e)=>{updateFormData(e)}}  >\n         \n        <section className=\"input-holders d-flex align-items-center justify-content-center h-100 flex-column\">\n          <div className=\"TodoMsg\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              aria-label=\"Text input \"\n              placeholder = \"Enter Todo\"\n              name=\"TodoTitle\"\n              required\n              value={TodoFormData.TodoTitle}\n              onChange={(event)=>{setTodoFormData({...TodoFormData,TodoTitle:event.target.value})}}\n            />\n          </div>\n          <div class=\"input-group mb-3 \">\n            <div class=\"input-group-text\">\n              <input\n                className=\"form-check-input TodayTaskCheckbox mt-0 rounded-circle\"\n                type=\"checkbox\"\n                value=\"\"\n                aria-label=\"Checkbox for following text input\"\n                onChange = { (e) => {setTodayTask(e.target.checked)}}\n                id=\"TodayTaskCheckbox\"\n                \n              />\n            </div>\n            <input\n              type=\"date\"\n              \n              \n\n              className=\"form-control\"\n              aria-label=\"Text input with checkbox\"\n              placeholder = \"Today's Task\"\n              name=\"TodayTask\"\n              disabled = {!TodayTask}\n              required = {TodayTask}\n              value={TodoFormData.TodayTask}\n              onChange={(event)=>{setTodoFormData({...TodoFormData,TodayTask:event.target.value})}}\n            />\n          </div>\n          <div className=\"Category\">\n           \n              <select  className=\"form-control\"  name=\"Category\"  id=\"\" hidden={TodayTask} \n              required=\" \" onChange={(event)=>{setTodoFormData({...TodoFormData,category:event.target.value})}}>\n                <option defaultValue=\"Select Category\">SELECT CATEGORY</option>\n                <option value=\"personal\">personal</option>\n                <option value=\"bussiness\">bussiness</option>\n                \n              </select>\n              <select  className=\"form-control\"  name=\"Category\"  id=\"\" hidden={!TodayTask}\n              required={TodayTask}  onChange={(event)=>{setTodoFormData({...TodoFormData,category:event.target.value})}}>\n                <option defaultValue=\"Select Category\">SELECT CATEGORY</option>\n                \n                <option value=\"Today's Task\">Today's Task</option>\n              </select>\n          </div>\n          <button type=\"submit\">submit</button>\n        </section>\n\n        \n\n        </form>\n      </section>\n    </>\n  );\n};\n","import React from 'react'\nimport {AiOutlinePlus} from 'react-icons/ai';\nimport { AddTodos } from './AddTodos.js';\n\nexport const AddTodoButton = ({ setnewdesktopHeadings,desktopHeadings }) => {\n    const [AddTodo, setAddTodo] = React.useState(\"none\");\n    \n   \n    \n\n\n    const closeTodoOption = () => {\n    AddTodo===\"block\" ? setAddTodo(\"none\") : setAddTodo(\"block\");\n}\n  \n\nconst updateDesktopHeadings = (TodoFormData) => {\n    \n    setnewdesktopHeadings(TodoFormData);\n    AddTodo===\"none\" ? setAddTodo(\"block\") : setAddTodo(\"none\");\n\n}\n\n\n    return (\n    <>\n        <button className=\"AddTodoButton rounded-circle position-fixed\" onClick = {()=>{AddTodo===\"none\" ? setAddTodo(\"block\") : setAddTodo(\"none\")}}>\n        <i>\n            <AiOutlinePlus />\n        </i>\n</button>\n<div className=\"container-fluid addTodo\" style={{display:AddTodo}}>\n        <div className=\"row h-100\">\n            <AddTodos closeTodoOption= {closeTodoOption} updateDesktopHeadings={updateDesktopHeadings} desktopHeadings = {desktopHeadings}  />\n        </div>\n</div> \n</>\n    )\n}\n","import React from \"react\";\n\nimport { DesktopBanner } from \"./DesktopBanner.js\";\nimport { AddTodoButton } from \"./AddTodoButton.js\";\n\n\nexport const Dashboard = ({\n  desktopHeadings,\n  setdesktopHeadings,\n  DataChangeSuccess,\n  setDataChangeSuccess,\n  deleteTodo\n}) => {\n  const setnewDesktopHeadings = (TodoFormData) => {\n    setdesktopHeadings(TodoFormData);\n    alert(\"Todo Added\");\n    DataChangeSuccess\n      ? setDataChangeSuccess(false)\n      : setDataChangeSuccess(true);\n  };\n\n\n  return (\n    <>\n      <div className=\"container-fluid p-0 m-0 mt-3\">\n        <AddTodoButton\n          setnewdesktopHeadings={setnewDesktopHeadings}\n          desktopHeadings={desktopHeadings}\n        />\n\n        <div className=\"row\">\n          <div className=\"col-12 headings\">\n            <section className=\"row\">\n              {desktopHeadings.map((headingList) => {\n                return (\n                  <DesktopBanner\n                    key={headingList.id}\n                    colClass={headingList.colClass}\n                    category={headingList.Category}\n                    not={headingList.msgNo}\n                    itemList={headingList.itemList}\n                    MessageList={headingList.TodoMsg}\n                    Dates={headingList.Dates}\n                    deleteTodo={deleteTodo}\n                  />\n                );\n              })}\n            </section>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","\nimport {\n    Link\n} from \"react-router-dom\";\n\n\nimport { IoMdAnalytics } from 'react-icons/io';\nimport {BiHomeAlt} from 'react-icons/bi';\nimport {MdEventBusy} from 'react-icons/md';\nimport {MdPersonalVideo} from 'react-icons/md';\n\nimport {FcTodoList} from 'react-icons/fc';\nexport const Sidebar = ({Width}) => {\n\n    const showDropdown = () =>{\n            let dropDown = document.querySelector(\".dropdownMenu\").style;\n            let sidebar = document.querySelector(\".sidebar\").style;\n            if(Width < 576)\n                sidebar.display === \"block\" ? dropDown.display === \"block\" ? dropDown.display = \"none\" : dropDown.display=\"block\" : dropDown.display=\"none\"\n    }\n    return (\n      \n            <div className=\"sidebar-content\">\n\n               \n\n                \n\n                <section className=\"menu-list mt-3 d-flex flex-column justify-content-between\">\n\n                    <nav className=\"manu-item-holder\">\n                        <ul className=\"menu-items px-2\">\n\n\n \n                            <li className=\"py-2 mt-1 activate\">\n                                \n                                <Link to=\"/\" className=\"dashboard\"><BiHomeAlt /></Link>\n                                \n                            </li>\n\n\n\n\n                            <li className=\"nav-item dropdown\">\n          <Link className=\"nav-link dropdown-toggle ps-0\" id=\"navbarDropdown\" role=\"button\"   aria-expanded=\"false\">\n          <button to=\"/Lead\" className=\"Lead\" onClick = {showDropdown}><FcTodoList /></button>\n          </Link>\n          <ul class=\"dropdownMenu p-0\" aria-labelledby=\"navbarDropdown\">\n            <li><Link class=\"dropdown-item \" to=\"/category/personal\">{<MdPersonalVideo />}</Link></li>\n            <li><Link class=\"dropdown-item\" to=\"/category/bussiness\">{<MdEventBusy/>}</Link></li>\n          </ul>\n        </li>\n\n                           \n\n\n\n\n                            <li className=\"py-2  mt-1\">\n                                \n                                <Link to=\"/Analytics\" className=\"Employee\"><IoMdAnalytics /></Link>\n                                \n                            </li>\n\n\n\n\n\n\n                           \n\n\n\n\n                          \n\n\n\n\n\n\n\n                            \n\n                           \n                        </ul>\n                    </nav>\n\n                    <nav className=\"menu-item-holder\">\n                        \n                        {/* <button><FaSignInAlt /></button> */}\n                        <p className=\"mt-2 h-100\">v1.0.1</p>\n                        \n                    </nav>\n\n                </section>\n            </div>\n     \n    )\n}\n","import React from 'react'\n\n\nimport {FcEditImage} from 'react-icons/fc'\nimport {FcDeleteRow} from 'react-icons/fc'\n\nexport const TodoItem = ({TodoTitle,Checked,setChecked,category,deleteTodo}) => {\n\n\n    return (\n        <section className=\"col-12 mt-2\">\n        <div className=\"ps-3 py-3 tasks d-flex align-items-center\">\n\n        \n            \n\n            <div className=\"taskTitle d-flex align-items-center ms-3\">\n                <p className=\"text-white mb-0 text-break\">{TodoTitle}</p>\n            </div>\n\n\n            <div className=\"update-delete-button w-50 d-flex justify-content-end\">\n                                        <button className=\"edit\">\n                                            <FcEditImage />\n\n\n                                        </button>\n                                            <button className=\"delete\" onClick={()=>{deleteTodo(TodoTitle,category)}} >\n                                                <FcDeleteRow />\n                                            </button>\n                                    </div>\n        \n           \n\n\n        </div>\n</section>\n    )\n}\n","import React from 'react'\nimport { TodoItem } from '../TodoItem';\n\nexport const Personal = ({Banners,deleteTodo}) => {\n    const [Checked, setChecked] = React.useState(false);\n    const {ids} = Banners[0].itemList;\n   \n    return (\n    <>\n        <div className=\"container-fluid ps-3 m-0 mt-3\">\n        <h3 className=\"title text-white\">Hey! What's up</h3>\n        <p className=\"categories-title mt-4\">Personal Category</p>\n        <section className=\"row mt-2\">\n           \n            {/* {\n                Banners.map((BannerList ) => {\n                    return <BannerView key = {BannerList.id} not = {BannerList.msgNo} colClass = {BannerList.colClass} borderClass = {BannerList.borderClass} category = {BannerList.Category} Message = {BannerList.TodoMsg} />\n                })\n            }\n            */}\n           \n          \n        </section>\n\n        <section className=\"todolistHolder\">\n        <p className=\"categories-title mt-4\">Todos</p>\n        <div className=\"row mt-2 h-100 overflow-scroll\">\n        \n        {\n\n            ids.map ((TodoItems,index) => {\n               return <TodoItem TodoTitle = {Banners[0].TodoMsg.Msgs[index]}  Checked = {Checked} setChecked = {setChecked} key = {index} category={Banners[0].Category}  deleteTodo={deleteTodo}  />\n            }) \n        }\n            \n        \n        \n\n            \n           \n        </div>\n        </section>\n        \n       \n</div>\n</>\n    )\n}\n","import React from 'react'\nimport { TodoItem } from '../TodoItem';\n\nexport const Bussiness = ({Banners,deleteTodo}) => {\n    const [Checked, setChecked] = React.useState(false);\n    const {ids} = Banners[1].itemList;\n\n    return (\n    <>\n        <div className=\"container-fluid ps-3 m-0 mt-3\">\n        <h3 className=\"title text-white\">Hey! What's up</h3>\n\n        <p className=\"categories-title mt-4\">Bussiness</p>\n        <section className=\"row mt-2\">\n           \n            {/* {\n                Banners.map((BannerList ) => {\n                    return <BannerView key = {BannerList.id} not = {BannerList.msgNo} colClass = {BannerList.colClass} borderClass = {BannerList.borderClass} category = {BannerList.Category} Message = {BannerList.TodoMsg} />\n                })\n            }\n            */}\n           \n          \n        </section>\n\n        <section className=\"todolistHolder\">\n        <p className=\"categories-title mt-4\">Todos</p>\n        <div className=\"row mt-2 h-100 overflow-scroll\">\n        \n        {\n\n            ids.map ((TodoItems,index) => {\n               return <TodoItem TodoTitle = {Banners[1].TodoMsg.Msgs[index]}  Checked = {Checked} setChecked = {setChecked} key = {index} category={Banners[1].Category}  deleteTodo={deleteTodo}  />\n            }) \n        }\n            \n        \n        \n\n            \n           \n        </div>\n        </section>\n        \n       \n</div>\n</>\n    )\n}\n","import React from 'react'\n\nexport const Analytics = () => {\n    return (\n        <div>\n            <h1>This Section will be enabled soon </h1>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const BannerView = ({not,colClass,borderClass,category}) => {\n    return (\n        <div className={colClass}>\n                             <section className=\"categoryList p-1\">\n                                <span className=\"numberOfTasks text-white ps-2 pt-2 text-break\">{not}</span>\n                                <h5 className=\"categoryTitle text-white p-2 mt-2 text-break\">{category}</h5>\n                                <div className=\"w-100 px-2\">\n                                <span className={borderClass}></span>\n                                </div>\n                            </section>   \n                        </div>\n    )\n}\n","import React from 'react'\n\n\nimport { TodoItem } from './TodoItem.js'\nimport {BannerView} from './BannerView.js'\nimport { AddTodoButton } from './AddTodoButton.js';\n\n\n\n\n\nexport const MobileView = ({setDataChangeSuccess,DataChangeSuccess,Banners,setBanners,deleteTodo}) => {\n\n    \n    const [Checked, setChecked] = React.useState(false);\n\n   \n\n        \n        const setnewDesktopHeadings = (TodoFormData) =>{\n            setBanners(TodoFormData);\n            alert(\"Todo Added\");\n            DataChangeSuccess ? setDataChangeSuccess(false) : setDataChangeSuccess(true);\n            \n        }\n\n\n       \n        \n        \n        const {ids} = Banners[2].itemList;\n\n    return (\n        <>\n            <div className=\"container-fluid ps-3 m-0 mt-3\">\n                    <h3 className=\"title text-white\">Hey! What's up</h3>\n\n                    <AddTodoButton  setnewdesktopHeadings = {setnewDesktopHeadings}  desktopHeadings = {Banners}  />\n                    <p className=\"categories-title mt-4\">Categories</p>\n                    <section className=\"row mt-2\">\n                       \n                        {\n                            Banners.map((BannerList ) => {\n                                return <BannerView key = {BannerList.id} not = {BannerList.msgNo} colClass = {BannerList.colClass} borderClass = {BannerList.borderClass} category = {BannerList.Category} Message = {BannerList.TodoMsg} />\n                            })\n                        }\n                       \n                       \n                      \n                    </section>\n\n                    <section className=\"todolistHolder\">\n                    <p className=\"categories-title mt-4\">Today's Tasks</p>\n                    <div className=\"row mt-2 h-100 overflow-scroll\">\n                    \n                    {\n\n                        ids.map ((TodoItems,index) => {\n                           return <TodoItem TodoTitle = {Banners[2].TodoMsg.Msgs[index]}  Checked = {Checked} setChecked = {setChecked} key = {index} category={Banners[2].Category}  deleteTodo={deleteTodo} />\n                        }) \n                    }\n                        \n                    \n                    \n\n                        \n                       \n                    </div>\n                    </section>\n                    \n                   \n            </div>\n        </>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles/Structure.css\";\nimport { Header } from \"../components/Header.js\";\n\nimport { Dashboard } from \"./Dashboard.js\";\nimport { Sidebar } from \"../components/Sidebar.js\";\nimport {Personal} from './Categories/Personal.js'\nimport {Bussiness} from './Categories/Bussiness.js'\nimport { Analytics } from \"./Analytics.js\";\n\n\n\nimport { MobileView } from \"./MobileView.js\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\n\nconst getDataFromLocalStorage = () =>{\n  let Heading = localStorage.getItem('Headings');\n      if(Heading){\n          return JSON.parse(localStorage.getItem('Headings'));\n      }else{\n          return [\n              {\n      \n                  id:0,\n                  msgNo:0,\n                  Category:\"personal\",\n                  colClass:\"col-3\",\n                  itemList: {\n                  ids:[\n                     \n                  ]\n                  },\n                  TodoMsg:{\n                      Msgs:[\n                       \n                      ] \n                    },\n                    Dates:{\n                      TodayTask:[\n                        \n                      ]\n                    },\n                  borderClass:\"border-span-2\"\n              \n              },\n              {\n                  id:1,\n                  msgNo:0,\n                  Category:\"Bussiness\",\n                  colClass:\"col-3\",\n                  itemList : {\n                      ids:[\n                         \n                      ]\n                  },\n                  TodoMsg:{\n                    Msgs:[\n                      \n                    ] \n                  },\n                  Dates:{\n                      TodayTask:[\n                        \n                      ]\n                    },\n                  borderClass:\"border-span\"\n                  \n              },\n              {\n              \n                  id:2,\n                  msgNo:0,\n                  Category:\"Today's Task\",\n                  colClass:\"col-3\",\n                  itemList: {\n                  ids:[\n                     \n                  ]\n                  },\n                  TodoMsg:{\n                      Msgs:[\n                       \n                      ] \n                    },\n                    Dates:{\n                      TodayTask:[\n                        \n                      ]\n                    },\n                  borderClass:\"border-span-2\"\n              \n              },\n          ]\n      }\n}\n\n\n\n\n\nexport const Structure = () => {\n  const [Width, setWidth] = useState(window.screen.width);\n  const [DataChangeSuccess, setDataChangeSuccess] = useState(false);\n  const [desktopHeadings, setdesktopHeadings] = useState(getDataFromLocalStorage());\n  const [SearchData, setSearchData] = useState(\"\");\n  const [dataCount, setdataCount] = useState([\n    {\n      default:0,\n      prevoius:0\n    },\n  ]);\n\n\n\n\n  const deleteTodo = (Message, TodoCategory) => {\n    let index;\n    switch (TodoCategory) {\n      case \"personal\":\n        index = 0;\n        break;\n\n      case \"Today's Task\":\n        index = 2;\n        break;\n\n      case \"bussiness\":\n        index = 1;\n        break;\n      default:\n        alert(\"something Went Wrong\");\n        break;\n    }\n\n    let TodoIndex = desktopHeadings[index].TodoMsg.Msgs.findIndex(\n      (elements) => elements === Message\n    );\n    let deleteIds = desktopHeadings[index].itemList.ids[TodoIndex];\n    let deleteDates = desktopHeadings[index].Dates.TodayTask[TodoIndex];\n\n    let NewData = {\n      ...desktopHeadings[index],\n      msgNo: desktopHeadings[index].msgNo - 1,\n    };\n    let Msgs = desktopHeadings[index].TodoMsg.Msgs.filter((TodoDeleteIndex) => {\n      return TodoDeleteIndex !== Message;\n    });\n    let ids = desktopHeadings[index].itemList.ids.filter((TodoDeleteIndex) => {\n      return TodoDeleteIndex !== deleteIds;\n    });\n    let TodayTask = desktopHeadings[index].Dates.TodayTask.filter(\n      (TodoDeleteIndex) => {\n        return TodoDeleteIndex !== deleteDates;\n      }\n    );\n    NewData = { ...NewData, TodoMsg: { Msgs } };\n    NewData = { ...NewData, itemList: { ids } };\n    NewData = { ...NewData, Dates: { TodayTask } };\n    desktopHeadings[index] = NewData;\n    setdesktopHeadings(desktopHeadings);\n\n    DataChangeSuccess\n      ? setDataChangeSuccess(false)\n      : setDataChangeSuccess(true);\n  };\n\n   \n\n\n  const SearchTodos = (e) =>{\n    e.preventDefault();\n    console.log(SearchData);\n    console.log(desktopHeadings[2].TodoMsg.Msgs.findIndex(elements => elements=== SearchData) );\n    setSearchData(\"\");\n  }\n  \n  \n\n  const ChangeWidth = () => {\n    setWidth(window.screen.width);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", ChangeWidth);\n    return () => {\n      window.removeEventListener(\"resize\", ChangeWidth);\n    };\n  });\n\n  useEffect(() => {\n    let data1 = dataCount[0].default;\n    let data2 = dataCount[0].default;\n    data1=data1+1;\n    data1 = ({...dataCount,default:data1});\n     data1 = ({...data1,prevoius:data2});\n     \n     dataCount[0]=data1;\n    \n    localStorage.setItem('Headings',JSON.stringify(desktopHeadings));\n}, [DataChangeSuccess])\n\n  return (\n    <Router>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12 header\">\n            <Header SearchData={SearchData} setSearchData={setSearchData} SearchTodos = {SearchTodos} defaultTodoNo = {dataCount[0].default} updated = {dataCount[0].prevoius} />\n          </div>\n          <div className=\"col-12 main-content\">\n            <div className=\"row main-content-holder\">\n              <div className=\"col-12 sidebar\">\n                <Sidebar Width={Width} />\n              </div>\n              <div className=\"col-12 main\">\n            <Switch>\n              <Route exact path = \"/\"  render = {props=>(\n\n                  Width > 576 ? <Dashboard  {...props}  setDataChangeSuccess={setDataChangeSuccess} DataChangeSuccess = {DataChangeSuccess} desktopHeadings={desktopHeadings} setdesktopHeadings={setdesktopHeadings}  deleteTodo={deleteTodo}  /> : <MobileView setDataChangeSuccess={setDataChangeSuccess} DataChangeSuccess={DataChangeSuccess} Banners = {desktopHeadings} setBanners = {setdesktopHeadings} deleteTodo={deleteTodo}  /> \n\n              )}/>\n               \n\n               <Switch>\n                        <Route exact path=\"/category/personal\" render= {props=>(\n                            <Personal {...props} Banners={desktopHeadings}   deleteTodo={deleteTodo} />\n                        )} />\n                        <Route exact path=\"/category/bussiness\" render= {props=>(\n                            <Bussiness {...props} Banners={desktopHeadings}  deleteTodo={deleteTodo} />\n                        )} />\n                        <Route exact path= \"/Analytics\" component ={Analytics}  />\n               </Switch>\n              \n            \n            \n\n\n            </Switch>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n};\n","// import logo from './logo.svg';\nimport React, { useState }  from 'react';\nimport './App.css';\n//  import Header from './components/Header.js';\n import {Structure} from './components/Structure.js';\n import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [Myname, setMyname] = useState(1);\n  const ShowName = () =>{\n      Myname === 1 ?  document.querySelector('.sidebardiv').style.display = \"none\" : document.querySelector('.sidebardiv').style.display = \"block\";\n      setMyname(0);\n\n  }\n\n\n\n  return (\n      <Router>\n          <div>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Structure  showfun = {ShowName} />\n                </Route>\n              </Switch>\n          </div>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}